package de.jensklingenberg.ktorfit.demo

import com.example.api.GithubService
import com.example.api.StarWarsApi
import de.jensklingenberg.ktorfit.adapter.FlowCallAdapter
import de.jensklingenberg.ktorfit.Ktorfit
import de.jensklingenberg.ktorfit.adapter.KtorfitCallAdapter
import de.jensklingenberg.ktorfit.create
import io.ktor.client.*
import io.ktor.client.plugins.*
import io.ktor.client.request.forms.*
import io.ktor.http.*
import io.ktor.serialization.kotlinx.json.*
import kotlinx.coroutines.delay
import kotlinx.coroutines.runBlocking
import kotlinx.serialization.json.Json
import java.io.File


val jvmClient = HttpClient() {
    install(ContentNegotiation) {
        // register(ContentType.Application.Any, CustomJsonConverter())
       // json(Json { isLenient = true; ignoreUnknownKeys = true })
    }
    install(HttpTimeout) {

    }
    expectSuccess = false


}

val jvmKtorfit = Ktorfit(baseUrl = "http://localhost:8080/", jvmClient)

val githubApi = jvmKtorfit.create<GithubService>()


val starWarsApi = jvmKtorfit.create<StarWarsApi>()


fun main() {

    jvmKtorfit.addAdapter(FlowCallAdapter())
    jvmKtorfit.addAdapter(RxCallAdapter())
    jvmKtorfit.addAdapter(KtorfitCallAdapter())


    runBlocking {
        //  println(de.jensklingenberg.ktorfit.demo.getStarWarsApi.getPersonById(1).name)

        val test = githubApi.upload("Ktor logo",  formData {
            append("image", File("ktor_logo.png").readBytes(), Headers.build {
                append(HttpHeaders.ContentType, "image/png")
                append(HttpHeaders.ContentDisposition, "filename=ktor_logo.png")
            })
        })

        // println(secondApi.getStream().get(1))
        println(test)



        delay(3000)

    }

}